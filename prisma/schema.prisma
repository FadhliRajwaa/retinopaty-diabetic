// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User profiles table - MATCH ACTUAL SUPABASE SCHEMA
model UserProfile {
  id               String    @id @default(uuid()) @db.Uuid
  userId           String    @unique @map("user_id") // Maps to Supabase auth.users.id
  email            String    @unique
  fullName         String?   @map("full_name")
  role             String    @default("patient") // "admin" or "patient"
  status           String?   @default("pending") // "pending", "approved", "rejected", "suspended"
  phone            String?
  dateOfBirth      DateTime? @map("date_of_birth") @db.Date
  gender           String?   // "male", "female", "other"
  address          String?
  medicalHistory   String?   @map("medical_history")
  emergencyContact String?   @map("emergency_contact")
  approvedAt       DateTime? @map("approved_at") @db.Timestamptz
  approvedBy       String?   @map("approved_by")
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  // Relations
  scanResultsAsPatient ScanResult[] @relation("PatientScans")
  scanResultsAsCreator ScanResult[] @relation("CreatorScans")
  approvedUsers        UserProfile[] @relation("ApprovalRelation")
  approver             UserProfile?  @relation("ApprovalRelation", fields: [approvedBy], references: [userId])

  @@map("user_profiles")
}

// Scan results table - MATCH ACTUAL SUPABASE SCHEMA  
model ScanResult {
  id               String    @id @default(uuid()) @db.Uuid
  patientId        String    @map("patient_id") // Reference to user_profiles.id
  patientName      String    @map("patient_name")
  imageUrl         String?   @map("image_url")
  prediction       String    // "DR" or "NO_DR"
  confidence       Decimal   @db.Decimal // 0-100
  analysisDate     DateTime  @default(now()) @map("analysis_date") @db.Timestamptz
  notes            String?
  doctorSuggestion String?   @map("doctor_suggestion") // Auto-generated suggestion
  manualSuggestion String?   @map("manual_suggestion") // Manual override by doctor/admin
  createdBy        String    @map("created_by") // Admin user who performed scan (user_profiles.id)
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  // Relations
  patient UserProfile @relation("PatientScans", fields: [patientId], references: [id])
  creator UserProfile @relation("CreatorScans", fields: [createdBy], references: [id])

  @@map("scan_results")
}
